// <auto-generated />
using System;
using Blocktrust.Mediator.Server;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Blocktrust.Mediator.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230305185053_SimplifyNames3")]
    partial class SimplifyNames3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Blocktrust.Mediator.Server.Entities.ConnectionEntity", b =>
                {
                    b.Property<Guid>("ConnectionEntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("MediationGranted")
                        .HasColumnType("bit");

                    b.Property<string>("MediatorDid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MediatorEndpoint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoteDid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoutingDid")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ConnectionEntityId");

                    b.ToTable("Connections");
                });

            modelBuilder.Entity("Blocktrust.Mediator.Server.Entities.ConnectionKeyEntity", b =>
                {
                    b.Property<Guid>("MediatorConnectionKeyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MediatorConnectionKeyId");

                    b.ToTable("RecipientKeys");
                });

            modelBuilder.Entity("Blocktrust.Mediator.Server.Entities.OobInvitationEntity", b =>
                {
                    b.Property<Guid>("OobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Did")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Invitation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OobId");

                    b.ToTable("OobInvitations");
                });

            modelBuilder.Entity("Blocktrust.Mediator.Server.Entities.SecretEntity", b =>
                {
                    b.Property<Guid>("SecretId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VerificationMaterialFormat")
                        .HasColumnType("int");

                    b.Property<int>("VerificationMethodType")
                        .HasColumnType("int");

                    b.HasKey("SecretId");

                    b.ToTable("Secrets");
                });

            modelBuilder.Entity("Blocktrust.Mediator.Server.Entities.StoredMessageEntity", b =>
                {
                    b.Property<Guid>("StoredMessageEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MediatorConnectionKeyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StoredMessageEntityId");

                    b.ToTable("StoredMessages");
                });

            modelBuilder.Entity("Blocktrust.Mediator.Server.Entities.ConnectionKeyEntity", b =>
                {
                    b.HasOne("Blocktrust.Mediator.Server.Entities.ConnectionEntity", "ConnectionEntity")
                        .WithMany("KeyList")
                        .HasForeignKey("MediatorConnectionKeyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConnectionEntity");
                });

            modelBuilder.Entity("Blocktrust.Mediator.Server.Entities.StoredMessageEntity", b =>
                {
                    b.HasOne("Blocktrust.Mediator.Server.Entities.ConnectionKeyEntity", "ConnectionKeyEntity")
                        .WithMany("StoredMessage")
                        .HasForeignKey("StoredMessageEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConnectionKeyEntity");
                });

            modelBuilder.Entity("Blocktrust.Mediator.Server.Entities.ConnectionEntity", b =>
                {
                    b.Navigation("KeyList");
                });

            modelBuilder.Entity("Blocktrust.Mediator.Server.Entities.ConnectionKeyEntity", b =>
                {
                    b.Navigation("StoredMessage");
                });
#pragma warning restore 612, 618
        }
    }
}
